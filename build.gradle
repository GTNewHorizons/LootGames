buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft.version}-${config.lootgames.version}"
group = 'ru.timeconqueror' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'LootGames'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {

    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '56-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    def extraArgs = 'mixin.env.disableRefMap=true'.split(' ')
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
//            property 'forge.logging.console.level', 'debug'

            def newArgs = new ArrayList()
            newArgs.addAll(args)
            newArgs.addAll(extraArgs)
            setArgs(newArgs)
            
            mods {
                lootgames {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            //property 'forge.logging.console.level', 'debug'

            def newArgs = new ArrayList()
            newArgs.addAll(args)
            newArgs.addAll(extraArgs)
            setArgs(newArgs)

            mods {
                lootgames {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
//            property 'forge.logging.console.level', 'debug'
            args '--mod', 'lootgames', '--all', '--output', ("\"" + projectDir.path + "/src/main/resources/\"")
            def newArgs = new ArrayList()
            newArgs.addAll(args)
            newArgs.addAll(extraArgs)
            setArgs(newArgs)


            mods {
                lootgames {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs', 'runtimeMods'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    mavenCentral()
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.3'

    file("runtimeMods").eachFile { file ->
        def splitPos = file.name.lastIndexOf("-")
        def modartifact = file.name.substring(0, splitPos)
        def modversion = file.name.substring(splitPos + 1, file.name.length() - 4)
        def modreference = "lib:$modartifact:$modversion"

        dependencies {
            runtimeOnly fg.deobf(project.dependencies.create(modreference) {
                transitive = false
            })
        }
    }

    compileOnly 'org.jetbrains:annotations:18.0.0'

    implementation(fg.deobf("ru.timeconqueror:TimeCore:1.1.0.0"))

    runtimeOnly fg.deobf("mezz.jei:jei-1.14.4:6.0.0.27")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "lootgames",
                "Specification-Vendor"    : "Time_Conqueror",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Time_Conqueror",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}